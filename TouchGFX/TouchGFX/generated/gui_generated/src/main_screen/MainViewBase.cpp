/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    fondCouleur.setPosition(0, 0, 480, 272);
    fondCouleur.setColor(touchgfx::Color::getColorFromRGB(120, 160, 182));
    add(fondCouleur);

    FondMotif.setXY(0, 0);
    FondMotif.setBitmap(touchgfx::Bitmap(BITMAP_FINAL_BACKGROUND_480X272_ID));
    FondMotif.setAlpha(179);
    add(FondMotif);

    touchgfxTxt.setPosition(138, 180, 205, 20);
    touchgfxTxt.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    touchgfxTxt.setLinespacing(0);
    touchgfxTxtBuffer[0] = 0;
    touchgfxTxt.setWildcard(touchgfxTxtBuffer);
    touchgfxTxt.setTypedText(touchgfx::TypedText(T_TOUCHGFX_TEXT));
    add(touchgfxTxt);

    tickTxt.setPosition(138, 200, 205, 20);
    tickTxt.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    tickTxt.setLinespacing(0);
    tickTxtBuffer[0] = 0;
    tickTxt.setWildcard(tickTxtBuffer);
    tickTxt.setTypedText(touchgfx::TypedText(T_TICK_COUNTER));
    add(tickTxt);

    playPauseButton.setXY(215, 222);
    playPauseButton.setBitmaps(touchgfx::Bitmap(BITMAP_PLAY_ICON_ID), touchgfx::Bitmap(BITMAP_PLAY_ICON_ID));
    playPauseButton.setAction(buttonCallback);
    add(playPauseButton);

    previousButton.setXY(179, 229);
    previousButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_OUTLINE_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_AV_SKIP_PREVIOUS_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_AV_SKIP_PREVIOUS_50_50_E8F6FB_SVG_ID));
    previousButton.setIconXY(-7, -7);
    previousButton.setAction(buttonCallback);
    add(previousButton);

    nextButton.setXY(265, 229);
    nextButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_OUTLINE_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_AV_SKIP_NEXT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_AV_SKIP_NEXT_50_50_E8F6FB_SVG_ID));
    nextButton.setIconXY(-7, -7);
    nextButton.setAction(buttonCallback);
    add(nextButton);

    progression.setXY(90, 220);
    progression.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THIN_TRACK_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THIN_FILLER_MEDIUM_ID), touchgfx::Bitmap(BITMAP_TRANSPARENT_ID));
    progression.setupHorizontalSlider(0, 0, 0, 0, 300);
    progression.setValueRange(0, 100);
    progression.setValue(0);
    add(progression);

    textArea1.setXY(0, 0);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T_RESOURCEID1));
    textArea1.setAlpha(0);
    add(textArea1);
}

MainViewBase::~MainViewBase()
{

}

void MainViewBase::setupScreen()
{

}

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &playPauseButton)
    {
        //InteractionPlayPause
        //When playPauseButton clicked call virtual function
        //Call functionPlayPauseButton
        functionPlayPauseButton();
    }
    if (&src == &previousButton)
    {
        //InteractionPrevious
        //When previousButton clicked call virtual function
        //Call functionPreviousButton
        functionPreviousButton();
    }
    if (&src == &nextButton)
    {
        //InteractionNextButton
        //When nextButton clicked call virtual function
        //Call functionNextButton
        functionNextButton();
    }
}
